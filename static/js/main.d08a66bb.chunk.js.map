{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/MainNavigation/MainNavigation.tsx","pages/HomePage/HomePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","pages/PeoplePage/PeoplePage.tsx","helpers.ts","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","cn","MainNavigation","role","HomePage","NotFoundPage","Loader","PersonLink","person","slug","name","sex","PersonInfo","selectedPersonSlug","born","died","motherName","fatherName","mother","father","isSelected","PeopleTable","people","useParams","map","column","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoaded","setIsLoaded","isError","setIsError","useEffect","catch","finally","preparedPeople","peopleMap","Map","forEach","set","get","preparePeople","isErrorVisible","isNoPeopleVisible","length","isPeopleTabVisible","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d08a66bb.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => cn(\n      'navbar-item', { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const MainNavigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nconst FEMALE = 'f';\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, name, sex } = person;\n\n  return (\n    <NavLink to={`/people/${slug}`} className={cn({ 'has-text-danger': sex === FEMALE })}>\n      {name}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person;\n  selectedPersonSlug: string;\n};\n\nexport const PersonInfo: React.FC<Props> = ({\n  person,\n  selectedPersonSlug,\n}) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n  } = person;\n\n  const isSelected = selectedPersonSlug === slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': isSelected })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (\n            <PersonLink person={mother} />\n          ) : (\n            motherName || '-'\n          )}\n      </td>\n      <td>\n        {father\n          ? (\n            <PersonLink person={father} />\n          ) : (\n            fatherName || '-'\n          )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'].map(column => (\n            <th key={column}>{column}</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonInfo\n            key={person.slug}\n            person={person}\n            selectedPersonSlug={slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\n\nimport { Loader } from '../../components/Loader';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { preparePeople } from '../../helpers';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(response => setPeople(response))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoaded(true));\n  }, []);\n\n  const preparedPeople = preparePeople(people);\n\n  const isErrorVisible = isLoaded && isError;\n  const isNoPeopleVisible = isLoaded && !isError && people.length === 0;\n  const isPeopleTabVisible = isLoaded && !isError && people.length > 0;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {!isLoaded && <Loader />}\n\n          {isErrorVisible && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNoPeopleVisible && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isPeopleTabVisible && <PeopleTable people={preparedPeople} />}\n        </div>\n      </div>\n\n    </>\n  );\n};\n","import { Person } from './types';\n\nexport const preparePeople = (people: Person[]) => {\n  const peopleMap = new Map();\n\n  people.forEach(person => {\n    peopleMap.set(person.name, person);\n  });\n\n  const preparedPeople = people.map(person => {\n    const mother = peopleMap.get(person.motherName);\n    const father = peopleMap.get(person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n\n  return preparedPeople;\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\n\nimport './App.scss';\n\nimport { MainNavigation } from './components/MainNavigation';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <MainNavigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}